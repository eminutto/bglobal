// <auto-generated />
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bglobal.Migrations
{
    [DbContext(typeof(VehiculoDbContext))]
    partial class VehiculoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("DAL.Entidades.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DireccionEmail")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TitularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TitularId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("DAL.Entidades.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("DAL.Entidades.Titular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Titulares");
                });

            modelBuilder.Entity("DAL.Entidades.Titular_Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TitularId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TitularId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("TitularesVehiculos");
                });

            modelBuilder.Entity("DAL.Entidades.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantPuertas")
                        .HasColumnType("int");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("DAL.Entidades.Email", b =>
                {
                    b.HasOne("DAL.Entidades.Titular", "Titular")
                        .WithMany("Emails")
                        .HasForeignKey("TitularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("DAL.Entidades.Titular_Vehiculo", b =>
                {
                    b.HasOne("DAL.Entidades.Titular", "Titular")
                        .WithMany("TitularesVehiculos")
                        .HasForeignKey("TitularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entidades.Vehiculo", "Vehiculo")
                        .WithMany("TitularesVehiculos")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titular");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("DAL.Entidades.Vehiculo", b =>
                {
                    b.HasOne("DAL.Entidades.Marca", "Marca")
                        .WithMany("Vehiculos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("DAL.Entidades.Marca", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("DAL.Entidades.Titular", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("TitularesVehiculos");
                });

            modelBuilder.Entity("DAL.Entidades.Vehiculo", b =>
                {
                    b.Navigation("TitularesVehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
